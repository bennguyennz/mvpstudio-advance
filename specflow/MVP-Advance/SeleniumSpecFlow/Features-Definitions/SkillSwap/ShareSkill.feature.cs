// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SeleniumSpecFlow.Features_Definitions.SkillSwap
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ShareSkill")]
    public partial class ShareSkillFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "ShareSkill.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features-Definitions/SkillSwap", "ShareSkill", "As a Seller, I want the feature to manage my listing details\r\nSo that I am able t" +
                    "o add, edit or delete my listing details.", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter Share Skill")]
        [NUnit.Framework.CategoryAttribute("ShareShill")]
        [NUnit.Framework.TestCaseAttribute("SpecFlow Feature Demo", "A session discussing about Automated testing using SpecFlow, BDD, POM. Requiremen" +
            "ts: Visual studio Community version.", "Programming & Tech", "QA", "SpecFlow", "One-off service", "On-site", "20/11/2022", "23/11/2022", "Mon", "1100am", "0100pm", "Credit", "None", "10", "Active", null)]
        [NUnit.Framework.TestCaseAttribute("ExcelDataReader AutoIT XPath Siblings", "A session about sharing experiences about how to work with ExcelDataReader, AutoI" +
            "T, XPath Siblings", "Business", "Other", "AutoIT", "Hourly basis service", "Online", "10/12/2022", "28/12/2022", "Wed", "0200pm", "0700pm", "Skill-exchange", "Software Development", "None", "Hidden", null)]
        public void EnterShareSkill(
                    string title, 
                    string description, 
                    string category, 
                    string subcategory, 
                    string tags, 
                    string serviceType, 
                    string locationType, 
                    string startDate, 
                    string endDate, 
                    string days, 
                    string startTime, 
                    string endTime, 
                    string skillTrade, 
                    string skillExchange, 
                    string credit, 
                    string active, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ShareShill"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Title", title);
            argumentsOfScenario.Add("Description", description);
            argumentsOfScenario.Add("Category", category);
            argumentsOfScenario.Add("Subcategory", subcategory);
            argumentsOfScenario.Add("Tags", tags);
            argumentsOfScenario.Add("serviceType", serviceType);
            argumentsOfScenario.Add("locationType", locationType);
            argumentsOfScenario.Add("startDate", startDate);
            argumentsOfScenario.Add("endDate", endDate);
            argumentsOfScenario.Add("Days", days);
            argumentsOfScenario.Add("startTime", startTime);
            argumentsOfScenario.Add("endTime", endTime);
            argumentsOfScenario.Add("skillTrade", skillTrade);
            argumentsOfScenario.Add("skillExchange", skillExchange);
            argumentsOfScenario.Add("Credit", credit);
            argumentsOfScenario.Add("Active", active);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter Share Skill", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 9
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
#line 10
 testRunner.Given("I click button ShareSkill", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.When(string.Format("I enter \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\' \'{6}\' \'{7}\' \'{8}\' \'{9}\' \'{10}\' \'{11}\'" +
                            " \'{12}\' \'{13}\' \'{14}\' \'{15}\'", title, description, category, subcategory, tags, serviceType, locationType, startDate, endDate, days, startTime, endTime, skillTrade, skillExchange, credit, active), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
 testRunner.Then(string.Format("I view my skill details based on \'{0}\'", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 13
 testRunner.And(string.Format("My skill listing should be created as \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\' \'{6}\' \'" +
                            "{7}\' \'{8}\' \'{9}\' \'{10}\'", title, description, category, subcategory, serviceType, locationType, skillTrade, skillExchange, credit, startDate, endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
